<Window x:Class="TreeWPF.Views.MainWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        xmlns:helpers="clr-namespace:TreeWPF.Helpers"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:viewModels="clr-namespace:TreeWPF.ViewModels"
        Title="MainWindowView" MinHeight="600" Height="600" MinWidth="800" Width="800" FontSize="14" x:Name="Window">
    <Window.Resources>
        <ObjectDataProvider ObjectType="viewModels:DatabaseNodesViewModel" x:Key="dbNodesViewModel">
            <ObjectDataProvider.ConstructorParameters>
                <helpers:OpenSaveDialog></helpers:OpenSaveDialog>
            </ObjectDataProvider.ConstructorParameters>
        </ObjectDataProvider>
        <helpers:ConnectionStateData x:Key="ConnectionStateData"/>
        <ContextMenu x:Key="Folder">
            <MenuItem Header="Refresh" Command="{Binding RefreshCommand}"></MenuItem>
        </ContextMenu>
        <ContextMenu x:Key="NotFolder">
            <MenuItem Header="Generate script"
                      Command="{Binding GenerateScriptCommand}" 
                      DataContext="{Binding Source={StaticResource dbNodesViewModel}}"></MenuItem>
            <MenuItem Header="Refresh" Command="{Binding RefreshCommand}"></MenuItem>
        </ContextMenu>
        <helpers:ItemToContextMenuConverter x:Key="ContextMenuConverter"></helpers:ItemToContextMenuConverter>
    </Window.Resources>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="25"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="115*"/>
            <ColumnDefinition Width="44*"/>
            <ColumnDefinition Width="237*"/>
        </Grid.ColumnDefinitions>
        <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2">
            <TextBox DataContext="{Binding Source={StaticResource dbNodesViewModel}}"
                     Width="200"
                     Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.InputBindings>
                    <KeyBinding Command="{Binding SearchCommand}" Key="Return" />
                </TextBox.InputBindings>
            </TextBox>

            <Button Width="75" Command="{Binding SearchCommand}" DataContext="{Binding Source={StaticResource dbNodesViewModel}}">Search</Button>
        </StackPanel>
        <Menu Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3">
            <MenuItem Header="File">
                <MenuItem Header="Open" DataContext="{Binding Source={StaticResource dbNodesViewModel}}" Command="{Binding OpenCommand}"></MenuItem>
                <MenuItem Header="Save" DataContext="{Binding Source={StaticResource dbNodesViewModel}}" Command="{Binding SaveCommand}"></MenuItem>
                <MenuItem Header="Exit" Command="{Binding CloseWindowCommand}" CommandParameter="{Binding ElementName=Window}"></MenuItem>
            </MenuItem>
            <MenuItem Header="Action">
                <MenuItem Header="{Binding ConnectHeader}" Command="{Binding ConnectCommand}"></MenuItem>
                <MenuItem Header="Disconnect" Command="{Binding DisconnectCommand}"></MenuItem>
                <MenuItem Header="Refresh selected" DataContext="{Binding Source={StaticResource dbNodesViewModel}}" Command="{Binding RefreshCommand}"></MenuItem>
            </MenuItem>
            <MenuItem Header="Help"></MenuItem>
        </Menu>
        <StatusBar Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" >
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="1">
                <TextBlock Text="{Binding Source={StaticResource ConnectionStateData}, Path=ConnectionState, UpdateSourceTrigger=PropertyChanged}"></TextBlock>
            </StatusBarItem>
            <TextBlock Text="{Binding Source={StaticResource ConnectionStateData}, Path=ServerName, UpdateSourceTrigger=PropertyChanged}"></TextBlock>
        </StatusBar>
        <!--<StackPanel Grid.Row="1" Grid.Column="0"  Grid.ColumnSpan="2" HorizontalAlignment="Left" Orientation="Horizontal">
            <Button Margin="15,0" Padding="15,0" Command="{Binding ConnectCommand}">Connect</Button>
            <Button Margin="15,0" Padding="15,0" Command="{Binding DisconnectCommand}">Disconnect</Button>
            <Button Margin="15,0" Padding="15,0" Command="{Binding RefreshCommand}" DataContext="{Binding Source={StaticResource dbNodesViewModel}}">Refresh</Button>

        </StackPanel>-->
        <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Background="Bisque">
            <Grid.RowDefinitions>
                <RowDefinition Height="147*"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="334*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="315*" MinWidth="200"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="322*" MinWidth="200"/>
            </Grid.ColumnDefinitions>
            <GridSplitter Grid.Row="1" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="AliceBlue" ResizeDirection="Rows" />
            <GridSplitter Grid.Row="0" Grid.RowSpan="3" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  Background="AliceBlue" ResizeDirection="Columns" />
            
            <!--#region TreeView -->
            <Grid x:Name="DatabaseNodesView" Grid.Row="0" Grid.Column="0" DataContext="{Binding Source={StaticResource dbNodesViewModel}}" Grid.RowSpan="3">
                <TreeView x:Name="TreeView" BorderBrush="Transparent" FontSize="12"
                          ItemsSource="{Binding Tree}" Grid.Row="0">
                    <TreeView.Style>
                        <Style TargetType="{x:Type TreeView}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding TreeState}" Value="Busy">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.Style>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <i:InvokeCommandAction
                                Command="{Binding SetSelectedItemCommand}"
                                CommandParameter="{Binding SelectedItem, ElementName=TreeView}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="helpers:BringSelectedItemIntoViewBehavior.IsBroughtIntoViewWhenSelected" Value="True"/>
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal" ContextMenu="{Binding Converter={StaticResource ContextMenuConverter}}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="ContextMenuOpening">
                                        <i:InvokeCommandAction
                                            Command="{Binding ContextOpeningCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Image Width="20" Margin="0,3" 
                                       Source="{Binding Type,
                                   Converter={x:Static helpers:HeaderToImageConverter.Instance}}">
                                </Image>
                                <TextBlock VerticalAlignment="Center" Text="{Binding NodeName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Padding="10,0,5,0" />
                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>

                </TreeView>
                <TextBlock Grid.Row="0"  Grid.Column="0" Text="Generating script..." TextAlignment="Center" Background="White">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding TreeState}" Value="Busy">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
            <!--#endregion -->
            <!--#region Properties-->
            <Grid Grid.Row="0" Grid.Column="2" DataContext="{Binding ElementName=DatabaseNodesView, Path=DataContext}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock  Grid.Row="0" Text="Properties" Background="White"/>
                <DataGrid Grid.Row="1" AutoGenerateColumns="False" HeadersVisibility="None" ItemsSource="{Binding Properties}" 
                          CanUserAddRows="False" IsReadOnly="True" CanUserResizeColumns="True">
                    <DataGrid.Columns>
                        <DataGridTextColumn Width="1*"
                                            Binding="{Binding Name}">
                        </DataGridTextColumn>
                        <DataGridTextColumn Width="4*"
                                            Binding="{Binding Value}">
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
            <!--#endregion -->
            <!--#region Script -->
            <ScrollViewer Grid.Column="2" VerticalScrollBarVisibility="Auto" Grid.Row="2" >
                <RichTextBox DataContext="{Binding ElementName=DatabaseNodesView, Path=DataContext}">
                    <FlowDocument>
                        <Paragraph>
                            <Run Text="{Binding ScriptText, UpdateSourceTrigger=PropertyChanged}"/>
                        </Paragraph>
                    </FlowDocument>
                </RichTextBox>
            </ScrollViewer>
            <!--#endregion -->
        </Grid>
    </Grid>
</Window>

